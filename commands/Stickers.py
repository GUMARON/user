import ujson
import config
import requests
import functions


def cmd(api, message, args):
    try:
        if message.get('reply_message') is not None:
            user_id = message['reply_message']['from_id']
        else:
            user_id = functions.getUserId(args[1])

        target = api.users.get(user_ids=user_id)
        target = target.pop()
    except:
        api.messages.send(
            random_id=0,
            peer_id=message['peer_id'],
            message=f"{config.prefixes['error']} –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —É–∫–∞–∑–∞—Ç—å –Ω–∞ –Ω–µ–≥–æ —Å—Å—ã–ª–∫—É: /stickers [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]",
            reply_to=message['id']
        )
        return

    stickers_info = ujson.decode(requests.get(f"https://ssapi.ru/vk-stickers-api/?method=getStickers&user_id={target['id']}").text)
    if stickers_info.get('error') is True:
        api.messages.send(
                peer_id=message['peer_id'],
                random_id=0,
                message=f"{config.prefixes['error']} –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API: {stickers_info.get('error_msg')}",
                reply_to=message['id'],
                disable_mentions=True
        )
    else:
        stickers_info = stickers_info.get('response')
        print(stickers_info)
        if stickers_info.get('info').get('paid') == 0:
            api.messages.send(
                peer_id=message['peer_id'],
                random_id=0,
                message=f"{config.prefixes['success']} [id{target['id']}|{target['first_name']} {target['last_name']}] –∏–º–µ–µ—Ç {functions.pluralForm(stickers_info.get('count'), ['—Å—Ç–∏–∫–µ—Ä–ø–∞–∫', '—Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞', '—Å—Ç–∏–∫–µ—Ä–ø–∞–∫–æ–≤'])}.\nü•∫ –ü–ª–∞—Ç–Ω—ã—Ö —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç.",
                reply_to=message['id'],
                disable_mentions=True
            )
        else:
            api.messages.send(
                peer_id=message['peer_id'],
                random_id=0,
                message=f"{config.prefixes['success']} [id{target['id']}|{target['first_name']} {target['last_name']}] –∏–º–µ–µ—Ç {functions.pluralForm(stickers_info.get('count'), ['—Å—Ç–∏–∫–µ—Ä–ø–∞–∫', '—Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞', '—Å—Ç–∏–∫–µ—Ä–ø–∞–∫–æ–≤'])} –∏–∑ –Ω–∏—Ö {functions.pluralForm(stickers_info.get('info').get('paid'), ['—Å—Ç–∏–∫–µ—Ä–ø–∞–∫ –ø–ª–∞—Ç–Ω—ã–π', '—Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ –ø–ª–∞—Ç–Ω—ã–µ', '—Å—Ç–∏–∫–µ—Ä–ø–∞–∫–æ–≤ –ø–ª–∞—Ç–Ω—ã–µ'])}.\n\n‚öôÔ∏è –¶–µ–Ω–∞ —Å—Ç–∏–∫–µ—Ä–æ–≤ (–≤ –≥–æ–ª–æ—Å–∞—Ö / –≤ —Ä—É–±–ª—è—Ö): {stickers_info.get('info').get('price_vote')} / {stickers_info.get('info').get('price')}‚ÇΩ",
                reply_to=message['id'],
                disable_mentions=True
            )

    return
